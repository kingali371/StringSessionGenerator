from pyromod import listen

#############################################################################
from pyrogram import (
   __version__ as v, Client,
   filters, idle
)
from pyrogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
from pyrogram.errors import SessionPasswordNeeded, PhoneCodeExpired
from pyrogram.errors.exceptions.bad_request_400 import PasswordHashInvalid
from pyrogram.errors.exceptions.not_acceptable_406 import PhoneNumberInvalid
from pyrogram.errors.exceptions.bad_request_400 import PhoneCodeInvalid
#############################################################################
from telethon import TelegramClient
from telethon import __version__ as v2
from telethon.sessions import StringSession
from telethon.errors import (
    PhoneNumberInvalidError,
    PhoneCodeInvalidError,
    PhoneCodeExpiredError,
    SessionPasswordNeededError,
    PasswordHashInvalidError
)
#############################################################################

api_hash = "api_hash"
api_id = int("api_id")
token = "token"

app = Client(
  name="@Y88F8 - stringsession",
  api_id=api_id, api_hash=api_hash,
  bot_token=token, in_memory=True
)

@app.on_message(filters.command("start") & filters.private)
async def start_msg(app, message):
     reply_markup = ReplyKeyboardMarkup(
       [
         [
         KeyboardButton ("Pyrogram ➕"), KeyboardButton ("Telethon ➕")
         ],
         [KeyboardButton ("About ℹ️")]
       ],
       resize_keyboard=True, placeholder='➕'
     )
     await message.reply('''**
👋 Hi {} ,

➕ This bot for generate pyrogram string session

🇸🇾 Dev: @DevZaid**
'''.format(message.from_user.mention), reply_markup=reply_markup, quote=True)

@app.on_message(filters.text & filters.private)
async def generator_and_about(app,m):



   if m.text == "About ℹ️":
      text = ''
      text += "🐍 Programming language: Python"
      text += f"\n🔥 Pyrogram {v}"
      text += f"\n🌱 Telethon {v2}"
      text += f"\n\n👤 Bot owner: @DevZaid\n➕ Channel: @Y88F8"
      await m.reply(text, quote=True)
   
   
   
   if m.text == "Pyrogram ➕":
       rep = await m.reply(
       "**⏳ Processing..**", reply_markup=ReplyKeyboardRemove ()
       ,quote=True)
       c = Client(
       f"pyro{m.from_user.id}",api_id,api_hash,
       device_model="DevZaid", in_memory=True)
       await c.connect()
       await rep.delete()
       phone_ask = await app.ask(
       m.chat.id, "**Enter Your phone number:**",
       reply_to_message_id=m.id, filters=filters.text
       )
       phone = phone_ask.text
       
       try:
         send_code = await c.send_code(phone)
       except PhoneNumberInvalid:
         return await phone_ask.reply("Phone number invalid\n/start", quote=True)
       except Exception:
         return await phone_ask.reply("An error!, please try again later 🤠\n/start",quote=True)
       
       hash = send_code.phone_code_hash
       
       code_ask = await app.ask(
       m.chat.id, "**➕ Now send the code you recived with this type :**\n`1 2 3 4 5` ✅\n12345 ✖️**",filters=filters.text)
       
       code = code_ask.text
       
       try:
         await c.sign_in(phone, hash, code)
       except SessionPasswordNeeded:
         password_ask = await app.ask(m.chat.id, "**➕ Enter 2FA password**", filters=filters.text)
         password = password_ask.text
         try:
           await c.check_password(password)
         except PasswordHashInvalid:
           return await password_ask.reply("Password hash invalid\n/start", quote=True)
       
       except (PhoneCodeInvalid, PhoneCodeExpired):
         return await code_ask.reply("Phone code invalid!", quote=True)
         
       try:
         await c.sign_in(phone, hash, code)
       except:
         pass
       
       rep = await m.reply("**⏳ Processing ..**", quote=True)
       get = await c.get_me()
       text = '**✅ Successfully logged in\n'
       text += f'👤 Firstname : {get.first_name}\n'
       text += f'🆔 ID : {get.id}\n'
       text += f'📞 PhoneNumber : {phone}\n'
       text += f'🔒 Pyrogram String session In saved messages\n'
       text += '\n/start'
       
       string_session = await c.export_session_string()
       await rep.delete()
       
       await c.send_message('me', f'➕ Successfully generated pyrogram {v} string session\n\n`{string_session}`\n\n👤 @DevZaid - ✅ @Y88F8\n🐍 Generated by : @bot')
       await c.disconnect()
       
       await app.send_message(
       m.chat.id, text)
   
   
   
   if m.text == "Telethon ➕":
       rep = await m.reply(
       "**⏳ Processing..**", reply_markup=ReplyKeyboardRemove ()
       ,quote=True)
       c = TelegramClient(StringSession(), api_id, api_hash)
       await c.connect()
       await rep.delete()
       phone_ask = await app.ask(
       m.chat.id, "**Enter Your phone number:**",
       reply_to_message_id=m.id, filters=filters.text
       )
       phone = phone_ask.text
       
       try:
         send_code = await c.send_code_request(phone)
       except PhoneNumberInvalidError:
         return await phone_ask.reply("Phone number invalid\n/start", quote=True)
       except Exception:
         return await phone_ask.reply("An error!, please try again later 🤠\n/start",quote=True)
       
       code_ask = await app.ask(
       m.chat.id, "**➕ Now send the code you recived with this type :**\n`1 2 3 4 5` ✅\n12345 ✖️**",filters=filters.text)
       
       code = code_ask.text.replace(" ","")
       
       try:
         await c.sign_in(phone, code, password=None)
       except SessionPasswordNeededError:
         password_ask = await app.ask(m.chat.id, "**➕ Enter 2FA password**", filters=filters.text)
         password = password_ask.text
         try:
           await c.sign_in(password=password)
         except PasswordHashInvalidError:
           return await password_ask.reply("Password hash invalid\n/start", quote=True)
       
       except (PhoneCodeExpiredError, PhoneCodeInvalidError):
         return await code_ask.reply("Phone code invalid!", quote=True)
      
       await c.start(bot_token=phone)
       
       rep = await m.reply("**⏳ Processing ..**", quote=True)
       get = await c.get_me()
       text = '**✅ Successfully logged in\n'
       text += f'👤 Firstname : {get.first_name}\n'
       text += f'🆔 ID : {get.id}\n'
       text += f'📞 PhoneNumber : {phone}\n'
       text += f'🔒 Telethon String session In saved messages\n'
       text += '\n/start'
       
       string_session = c.session.save()
       await rep.delete()
       
       await c.send_message('me', f'➕ Successfully generated telethon {v2} string session\n\n`{string_session}`\n\n👤 @DevZaid - ✅ @Y88F8\n🐍 Generated by : @bot')
       await c.disconnect()
       
       await app.send_message(
       m.chat.id, text)
   
   
       

app.start()
print("🔒")
idle()
